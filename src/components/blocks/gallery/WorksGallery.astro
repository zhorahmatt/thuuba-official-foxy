---
// Import Swiper components for the slider
import { Icon } from 'astro-icon/components'

// Use the same project data structure from the works page for consistency
const featuredWorks = [
  {
    title: 'E-Commerce Platform',
    type: 'Web App',
    description: 'A scalable online store with integrated payments and analytics.',
    result: 'Increased sales by 40% for client',
    image: '/blog/post-01-cover.png',
    technology: ['React', 'Node.js', 'Stripe', 'TailwindCSS'],
    link: '/works/ecommerce-platform'
  },
  {
    title: 'AI-Powered CRM',
    type: 'Enterprise Solution',
    description: 'Custom CRM with AI-driven insights and automated workflows.',
    result: 'Reduced customer churn by 25%',
    image: '/blog/post-02-cover.png',
    technology: ['Python', 'TensorFlow', 'React', 'AWS'],
    link: '/works/ai-crm'
  },
  {
    title: 'Mobile Banking App',
    type: 'Mobile App',
    description: 'Secure and intuitive banking application with biometric authentication.',
    result: 'Over 100,000 downloads in first month',
    image: '/blog/post-03-cover.png',
    technology: ['React Native', 'Node.js', 'MongoDB', 'Firebase'],
    link: '/works/mobile-banking'
  },
  {
    title: 'Healthcare Management System',
    type: 'SaaS Platform',
    description: 'Comprehensive platform for healthcare providers to manage patient data and operations.',
    result: 'Improved operational efficiency by 35%',
    image: '/blog/post-04-cover.png',
    technology: ['Vue.js', 'Django', 'PostgreSQL', 'Docker'],
    link: '/works/healthcare-system'
  }
];
---

<section class="relative py-24 overflow-hidden bg-gradient-to-b from-neutral-50 to-white dark:from-neutral-900 dark:to-neutral-950">
  <!-- Subtle background elements -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute top-1/4 left-1/4 w-64 h-64 rounded-full bg-primary-300/10 dark:bg-primary-700/10 blur-3xl"></div>
    <div class="absolute bottom-1/3 right-1/3 w-96 h-96 rounded-full bg-primary-200/10 dark:bg-primary-800/10 blur-3xl"></div>
  </div>
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center px-4 py-2 rounded-full bg-primary-100 dark:bg-primary-900/50 text-primary-700 dark:text-primary-300 text-sm font-medium mb-6 backdrop-blur-sm border border-primary-200 dark:border-primary-800">
        <span class="flex h-2 w-2 relative mr-2">
          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
          <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
        </span>
        Featured Projects
      </div>
      
      <h2 class="text-4xl md:text-5xl font-bold mb-6 tracking-tight">
        <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-primary-500">Our Masterpiece Works</span>
      </h2>
      <p class="text-xl text-neutral-600 dark:text-neutral-300 max-w-3xl mx-auto mb-8 leading-relaxed">
        Explore a selection of our most impactful projects that showcase our expertise in delivering innovative digital solutions.
      </p>
    </div>
    
    <!-- Project Showcase Slider -->
    <div class="project-showcase relative">
      <!-- Project Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 overflow-hidden">
        {featuredWorks.slice(0, 3).map((work, index) => (
          <div class="group relative transform transition-all duration-500 hover:scale-105 hover:z-10">
            <!-- Card with hover effects -->
            <div class="h-full rounded-2xl overflow-hidden bg-white dark:bg-neutral-800 shadow-xl hover:shadow-2xl transition-all duration-500 border border-neutral-200/50 dark:border-neutral-700/50 hover:border-primary-500/30 dark:hover:border-primary-500/30">
              <!-- Image container with overlay -->
              <div class="relative overflow-hidden aspect-video">
                <img 
                  src={work.image} 
                  alt={work.title} 
                  class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110" 
                />
                
                <!-- Overlay with type badge -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex flex-col justify-end p-6">
                  <span class="inline-flex items-center px-3 py-1 rounded-full bg-primary-500/90 backdrop-blur-sm text-white text-xs font-medium mb-2 self-start">
                    {work.type}
                  </span>
                  <p class="text-white text-sm opacity-0 group-hover:opacity-100 transition-opacity duration-500 delay-100">
                    {work.result}
                  </p>
                </div>
              </div>
              
              <!-- Content -->
              <div class="p-6">
                <h3 class="text-xl font-bold mb-3 text-neutral-800 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300">
                  {work.title}
                </h3>
                <p class="text-neutral-600 dark:text-neutral-300 text-sm mb-4 line-clamp-2">
                  {work.description}
                </p>
                
                <!-- Technology tags -->
                <div class="flex flex-wrap gap-1 mb-4">
                  {work.technology.slice(0, 3).map(tech => (
                    <span class="px-2 py-1 rounded-md text-xs font-medium bg-neutral-100 dark:bg-neutral-700 text-neutral-800 dark:text-neutral-300">
                      {tech}
                    </span>
                  ))}
                  {work.technology.length > 3 && (
                    <span class="px-2 py-1 rounded-md text-xs font-medium bg-neutral-100 dark:bg-neutral-700 text-neutral-800 dark:text-neutral-300">
                      +{work.technology.length - 3}
                    </span>
                  )}
                </div>
                
                <!-- View details link -->
                <a 
                  href={work.link} 
                  class="inline-flex items-center text-sm font-medium text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 transition-colors duration-300 group-hover:underline"
                >
                  View Details
                  {/* <Icon name="arrow-right" class="ml-1 w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" /> */}
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <!-- View All Projects CTA -->
      <div class="mt-16 text-center">
        <a 
          href="/works" 
          class="inline-flex items-center justify-center px-8 py-4 rounded-xl bg-gradient-to-r from-primary-600 to-primary-500 text-white font-medium shadow-lg shadow-primary-500/20 hover:shadow-primary-500/30 transform hover:-translate-y-1 transition-all duration-300 group"
        >
          <span>Explore All Projects</span>
          <!-- <Icon name="arrow-right" class="ml-2 w-5 h-5 transition-transform duration-300 group-hover:translate-x-1" /> -->
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  // Function to initialize the observer
  function initializeWorksGalleryObserver() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    // Observe all project cards
    document.querySelectorAll('.project-showcase .group').forEach(item => {
      observer.observe(item);
    });
  }

  // Initialize on first page load
  document.addEventListener('DOMContentLoaded', initializeWorksGalleryObserver);
  
  // Initialize on Astro page transitions
  document.addEventListener('astro:page-load', initializeWorksGalleryObserver);
</script>

<style>
  /* Animation styles */
  .project-showcase .group {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  .project-showcase .group:nth-child(2) {
    transition-delay: 0.2s;
  }
  
  .project-showcase .group:nth-child(3) {
    transition-delay: 0.4s;
  }
  
  .project-showcase .animate-in {
    opacity: 1;
    transform: translateY(0);
  }
</style>